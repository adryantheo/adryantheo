{"version":3,"file":"static/js/918.b6bbf2af.chunk.js","mappings":"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","sources":["components/content/Content.js","../node_modules/@material-ui/core/esm/Container/Container.js"],"sourcesContent":["import React from \"react\";\r\nimport { Typography, Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// import Resume from \"../../settings/resume.json\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  main: {\r\n    maxWidth: '100vw',\r\n    marginTop: \"auto\",\r\n    marginBottom: \"auto\",\r\n  },\r\n  heading: {\r\n    marginLeft: theme.spacing(50),\r\n    \"@media (max-width: 768px)\": {\r\n      marginLeft: theme.spacing(10),\r\n    },\r\n  },\r\n  jobs: {\r\n    \"@media (max-width: 768px)\": {\r\n      fontSize: '3rem',\r\n    },\r\n  },\r\n}));\r\n\r\nconst Content = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" className={classes.main} maxWidth=\"md\">\r\n      <div className={classes.heading}>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n            <p>Adryan Theo</p>\r\n        </Typography>\r\n        <Typography variant=\"h1\" component=\"h1\" className={classes.jobs}>\r\n            <p>Software Engineer</p>\r\n            <p>...</p>\r\n        </Typography>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Content;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);"],"names":["useStyles","makeStyles","theme","main","maxWidth","marginTop","marginBottom","heading","marginLeft","spacing","jobs","fontSize","Content","classes","_jsx","Container","component","className","children","_jsxs","Typography","variant","React","props","ref","_props$component","Component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","other","_objectWithoutProperties","_extends","clsx","root","concat","capitalize","String","withStyles","_defineProperty","width","boxSizing","marginRight","paddingLeft","paddingRight","display","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","value","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","name"],"sourceRoot":""}